plot(cars)
?dnorm
a<-2
b = c(1,2,3)
?dnorm
a<-1
b = 2
b = c(1,2,3)
c = 1:3
d = seq(1,5,0.5)
e = rep(3,7)
1*2*3
1/2/3
2**3
2^1.5
log(12)
exp(1)
pi
4*atan(1)
ab = c(a,b)
2*b
b^2
sin(b)
b*c
b*c
sum(b*c)
mean(b)
median(b)
min(b)
max(b)
B = matrix(ncol=3, nrow=3)
B = matrix(0, 3, 3)
B = matrix(1:9, 3, 3)
B = matrix(1:9, 3, 3, byrow=TRUE)
B[2,2]
diag(B)
B[1,]
B[,2]
det(B)
solve(B)
C = diag(c(1,1,1))
solve(B+C)
d[c(3,4,5,6)]
d[3:6]
d[-1]
d[-(1:2)]
C = matrix(9:1,3,3)
B*C
B%*%C
mean(B)
dim(B)
ncol(B)
nrow(B)
prod(B)
length(B)
a = c(1,-5,3)
sort(a)
sort(C)
apply(C,2,sort)
apply(C, 1, sort)
t(apply(C, 1, sort))
U = rnorm(1000)
plot(U)
U = rnorm(1000)
plot(U)
plot(U, xlab="index")
plot(U, xlab="index", main="plot1")
sq1 = function(x){
out = x*abs(x)
out
}
sq1(-2)
sq1 = function(x) return(x*abs(x))
sq2 = function(x,y) return(x*y)
sq2(3,4)
sq3 = function(x,y) {
v1 = x*y
v2 = X^2+y^2
return(c(v1,v2))
}
sq3(2,3)
sq3 = function(x,y) {
v1 = x*y
v2 = x^2+y^2
return(c(v1,v2))
}
sq3(2,3)
install.packages("shiny")
install.packages("learnr")
x = 0:10
prob = dhyper(x, 30, 9970, 10)
plot(prob)
load("~/Desktop/MAST90105_Labs/Lab 2/Lab 2.Rmd")
x = 0:10
prob = dhyper(x, 30, 9970, 10)
print(prob)
plot(prob)
x = 0:10
prob = dhyper(x, 30, 9970, 10)
print(prob)
plot(x, prob)
x = 0:10
prob = dhyper(x, 30, 9970, 10)
print(prob)
plot(x, prob, ylab="pmf", main="Hypergeometric Probabilities", lwd=2)
y1 = dhyper(x, 30, 970, 10)
y2 = dhyper(x, 30, 70, 10)
y3 = dhyper(x, 30, 20, 10)
plot(x, y1, ylab="pmf", main="Hypergeometric Probabilities", lwd=2, col="green")
lines(x, y2, ylab="pmf", lwd=2, col="red", type="p")
lines(x, y3, ylab="pmf", lwd=2, col="blue", type="p")
i1 = 0:100
i2 = 101:1000
prb = (0.9/101)*sum(dhyper(5, i1, 1000-i1, 20)) + (0.1/900)*sum(dhyper(5, i2, 1000-i2, 20))
pr = rep(0, 1001)
pr[1:101] = (0.9/101)*dhyper(5, i1, 1000-i1, 20)/prb
pr[102:1001] = (0.1/900*)*dhyper(5, i2, 1000-i2, 20)/prb
i1 = 0:100
i2 = 101:1000
prb = (0.9/101)*sum(dhyper(5, i1, 1000-i1, 20)) + (0.1/900)*sum(dhyper(5, i2, 1000-i2, 20))
pr = rep(0, 1001)
pr[1:101] = (0.9/101)*dhyper(5, i1, 1000-i1, 20)/prb
pr[102:1001] = (0.1/900)*dhyper(5, i2, 1000-i2, 20)/prb
plot(0:1000, pr, xlab="x", ylab="pmf", lwd="2")
sum(pr[1:101])
?dhyper
dhyper(2, 3, 17, 2)*(1/18)
dhyper(2, 3, 17, 3)*(1/17)
k=2:10
pr = sum(dhyper(2, 3, 17, 2*k-2)/(22-2*k))
pr
1-pr
dhyper(0, 20, 80, 5)
phyper(3, 20, 80, 5)
5*(20/100)
k=0:5
sum(k*dhyper(k,20,80,5))
sum(k^2*dhyper(k,20,80,5))
k=0:5
ex = sum(k*dhyper(k,20,80,5))
ex
ex2 = sum(k^2*dhyper(k,20,80,5))
ex2 = sum(k^2*dhyper(k,20,80,5))
ex2
ex2 - (ex^2)
k = 0:5
pmf = dhyper(k, 20, 80, 5)
plot(k, pmf, main = "pmf of X", type="h")
k = 0:5
pmf = dhyper(k, 20, 80, 5)
plot(k, pmf, main = "pmf of X", type="h", xlab="x")
setwd("/Users/rafsanalmamun/Desktop/MAST90105_Labs/Lab 4")
source("Lab4.R")
p = 0.1:0.9:0.1
# fix p and declare n as vector
n = c(1,10,50,100,250,500)
p = 0.1
m34binomial(n, p)
p = 0.3
m34binomial(n, p)
p = 0.5
m34binomial(n, p)
p = 0.7
m34binomial(n, p)
p = 0.9
m34binomial(n, p)
# fix p and declare r as vector
r = c(1,10,50,100,250,500)
p = 0.1
m34negbinomial(r, p)
p = 0.3
m34negbinomial(r, p)
p = 0.5
m34negbinomial(r, p)
p = 0.7
m34negbinomial(r, p)
p = 0.9
m34negbinomial(r, p)
View(sq1)
# fix p, n and vary t as vector
n = 500
p = 0.1
t = c(n+100, n+500, n+1500, n+2000, n+10000, 16000000)
distBinomHyper(n, p, t)
# fix p, n and vary t as vector
n = 500
p = 0.1
t = c(n+100, n+500, n+1500, n+2000, n+10000, 16000000)
distBinomHyper(n, p, t=n+100)
p=0.3
distBinomHyper(n, p, n+100)
p=0.1
distBinomHyper(n, p, n+1500)
distBinomHyper(n, p, 16000000)
View(m34binomial)
View(distBinomHyper)
distBinomPoisson = function(n,p){
x=0:n
lam = n*p
pr1=dbinom(x,n,p)
pr2=dpois(x,lam)
D = 0.5*sum(abs(pr1-pr2)) + 0.5*ppois(n, lam, lower.tail = FALSE)
#define the x values around the mean plus minus 5 st. deviations of the
#binomial distribution
i.u=x < n*p + 5*sqrt(n*p*(1-p))
i.l=x > n*p - 5*sqrt(n*p*(1-p))
i.plot=i.u & i.l
#round the distance down to first 3 digits after decimal point
D1=floor(1000*D)/1000
#plot the two pmf-s for x values around the mean plus minus 5 st. dev
plot(x[i.plot],pr2[i.plot],type="p",col="orange",xlab="x", ylab="pmf", main=paste("D = ", D1), cex.main=1,lwd=2,cex=.5,ylim=c(0,max(c(pr1,pr2))))
lines(x[i.plot],pr1[i.plot],type="p",col="blue",lwd=2,cex=.5)
D
}
distBinomPoisson(100, 0.05)
distBinomPoisson(1000, 0.01)
